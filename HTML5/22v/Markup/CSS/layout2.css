.main-background {
    width: 100%;
    height: 500px;
    background-image: url(../img/shoes.jpeg);

    /* background-size: 100%; */
    /* cover : 배경이 짤려도 괜찮으니 빈공간 없이 배경으로 꽉 채워라 */
    background-size: cover;

    /* contain : 배경이 짤리면 안됨 */
    /* background-size: contain; */

    /* 배경 이미지는 꽉 차지 않으면 브라우저에 따라 높이 등에 맞게 반복된다 */
    background-repeat: no-repeat;

    /* 배경 위치 조정 가능 */
    background-position: center;

    /* scroll 시 배경 위치 조정 가능 */
    /* background-attachment: fixed; */

    /* 
    박스에 보정 입히기
    주의) 안에 글씨 있으면 글씨도 필터 입혀진다.
    */
    /* filter: brightness(70%); */

    /* margin collapse 현상 제거를 위해 테두리 붙지 않게 */
    padding: 1px;
}

.main-title {
    color: white;
    font-size: 40px;
    margin-top: 300px; /* margin collapse 현상으로 인해 font 뿐만 아니라 main-background까지 아래로 내려온다.*/
    /* margin collapse 현상 : 박스 2개가 위쪽 테두리에 겹쳐짐. 이러할 경우, margin도 합쳐진다. */
    margin-bottom: 0px;
    text-align: center;
}   

.main-content {
    color: red;
    font-weight: bold; 
    text-align: center; 
    position: relative; 
} 

.main-button{
    padding: 15px;
    font-size: 20px;
    background: white;
    border: none;
    border-radius: 5px;

    /* 좌표 이동하기 */
    /* 1. position 부여 */
    /* 의미1 : 내 원래 위치를 기준으로 이동해라 - 기준점 설정 */
    /* 의미2 : float 속성처럼 공중에 뜬다. */
    /* position: relative;  */
    /* top: 100px; */
    /* left: 100px; */

    /* 백그라운드 이미지 오른쪽 하단에 배치 */
    /* position: absolute;  
    right: 20px;
    bottom: 450px; */

    /* position: absolute를 활용한 가운데 정렬 */
    position: absolute;
    left: 0;
    right: 0;
    margin: auto;
    width: 100px;

    /* 
    [position] : 기준점 설정, 공중에 붕 뜬다.
    position: relative; => 내 원래(현재) 위치를 기준으로 이동
    position: absolute; => 내 부모 태그가 기준 -> 정확히는 positon: relative를 가진 부모 기준
    position: static; => 좌표 이동 X
    position: fixed; => 현재 화면이 기준
    */
    
}

/* 
postion 속성을 이용하여 header, footer처럼 
현재화면을 기준으로 고정되는 요소가 필요할 경우
이처럼 구현할 수 있다. (scroll 시에도 O)
*/
header{
    background: greenyellow; 
    position: fixed;
    top: 0px;
}
footer{
    background: #eee;
    position: fixed;
    bottom: 0px;
}

.box{
    background: #eee;
    text-align: center;
    
    /* 반응형 웹 페이지를 만들고 싶으면 % 자주 사용 */
    width: 55%; 
    /* 단, 문제 => width의 %는 PC 사이즈에서 너무 크다. => max-width를 같이 쓰자 */
    max-width: 500px;
    /* width 55%는 맞으나, 최대 500px 이상으로 커지지 X */

    padding: 10px;
    /* 가운데 정렬 */
    /* position: absolute; */
    right: 0;
    left: 0;
    margin: auto;
    /* top: 480px; */

    /* 해설 */
    position: relative;
    top: -40px;
    
    /* z-index: 5; 숫자가 높을 수록 위로 | 낮을 수록 뒤로 */

    /* 
    둘다 max-width: 500px인데 padding을 부여하자마자 500px을 넘어갔다.
    이유?
    *** 중요 ***
    width는 content 영역(실제 글 작성하는 등의)의 너비를 의미하기 때문.
    => 해결 방법 */
    box-sizing: border-box; /* width가 padding, border 포함하도록. */
    /* box-sizing: content-box; 원래  */
}

/* 앞으로 상단에 이것들을 적고 이렇게 시작하자 */
div, input, textarea {
    box-sizing: border-box;
}
body{
    margin: 0px;
}


.text-input{
/* input[속성명=속성값] */
/* input[type=text] */
    padding: 10px;
    font-size: 20px;
    border: 1px solid red;
    border-radius: 5px;
} 

.form-box{
    text-align: left;
    display: block;
    margin-left: auto;
    margin-right: auto; 

}

.form-background{
    background-color: black;
    padding: 30px;
}

.form-white{
    background-color: white;
    padding: 30px;
    width: 80%;
    max-width: 600px;
    margin: auto;
}

.form-input{
    padding: 10px;
    font-size: 20px;
    border: 1px solid black;
    border-radius: 5px;
    width: 100%;   
}

.heading{
    padding: 10px;
}

.name1, .name2{
    float: left;
    width: 50%; 
    padding: 10px;
}   
.name1>input, .name2>input{
    width: 100%; 
    padding: 10px;
    font-size: 20px;
    border: 1px solid black; 
    border-radius: 5px;
}  
.under{
    padding: 10px;
}
.btn{
    background-color: orange;
    border: none;
    width: 30%;
    border-radius: 5px; 
    font-weight: bold;
    color: white; 
    float: right;
}